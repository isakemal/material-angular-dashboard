{"version":3,"sources":["./src/app/pages/pages/error/error.component.ts","./src/app/pages/pages/error/error.component.html","./src/app/pages/pages/error/index.ts","./src/app/pages/pages/forgot-password/forgot-password.component.ts","./src/app/pages/pages/forgot-password/forgot-password.component.html","./src/app/pages/pages/forgot-password/index.ts","./src/app/pages/pages/login/index.ts","./src/app/pages/pages/login/login.component.ts","./src/app/pages/pages/login/login.component.html","./src/app/pages/pages/pages-routing.module.ts","./src/app/pages/pages/pages.module.ts","./src/app/pages/pages/sign-up/index.ts","./src/app/pages/pages/sign-up/sign-up.component.ts","./src/app/pages/pages/sign-up/sign-up.component.html"],"names":[],"mappings":"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","file":"pages-pages-pages-module.js","sourcesContent":["import { Component, HostBinding } from '@angular/core';\n\nimport { BlankLayoutCardComponent } from 'app/components/blank-layout-card';\n\n@Component({\n  selector: 'app-error',\n  styleUrls: ['../../../components/blank-layout-card/blank-layout-card.component.scss'],\n  templateUrl: './error.component.html',\n})\nexport class ErrorComponent extends BlankLayoutCardComponent { }\n","<div class=\"mdl-card mdl-card__blank-layout-card mdl-shadow--2dp\">\n  <div class=\"mdl-card__supporting-text color--dark-gray\">\n    <div class=\"mdl-grid\">\n      <div class=\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\">\n        <span class=\"mdl-card__title-text text-color--smooth-gray\">DARKBOARD</span>\n      </div>\n      <div class=\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\">\n        <span class=\"text--huge color-text--light-blue\">404</span>\n      </div>\n      <div class=\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\">\n        <span class=\"text--sorry text-color--white\">Sorry, but there's nothing here</span>\n      </div>\n      <div class=\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\">\n        <a routerLink=\"/\" class=\"mdl-button mdl-js-button color-text--light-blue pull-right\">\n          Go Back\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n","export { ErrorComponent } from './error.component';\n","import { Component, HostBinding } from '@angular/core';\n\nimport { BlankLayoutCardComponent } from 'app/components/blank-layout-card';\n\n@Component({\n  selector: 'app-forgot-password',\n  styleUrls: ['../../../components/blank-layout-card/blank-layout-card.component.scss'],\n  templateUrl: './forgot-password.component.html',\n})\nexport class ForgotPasswordComponent extends BlankLayoutCardComponent { }\n","<div class=\"mdl-card mdl-card__blank-layout-card mdl-shadow--2dp\">\n  <div class=\"mdl-card__supporting-text color--dark-gray\">\n    <div class=\"mdl-grid\">\n      <div class=\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\">\n        <span class=\"mdl-card__title-text text-color--smooth-gray\">DARKBOARD</span>\n      </div>\n      <div class=\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\">\n        <span class=\"blank-layout-card-name text-color--white\">Forgot password?</span>\n        <span class=\"blank-layout-card-secondary-text text-color--smoke\">Enter your email below to recieve your password</span>\n      </div>\n      <div class=\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\">\n        <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label full-size\">\n          <input class=\"mdl-textfield__input\" type=\"text\" id=\"e-mail\">\n          <label class=\"mdl-textfield__label\" for=\"e-mail\">Email</label>\n        </div>\n      </div>\n      <div class=\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone submit-cell\">\n        <div class=\"mdl-layout-spacer\"></div>\n        <a routerLink=\"/app/dashboard\">\n          <button class=\"mdl-button mdl-js-button mdl-button--raised color--light-blue\">\n            SEND PASSWORD\n          </button>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n","export { ForgotPasswordComponent } from './forgot-password.component';\n","export { LoginComponent } from './login.component';\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { BlankLayoutCardComponent } from 'app/components/blank-layout-card';\nimport { AuthService } from '../../../services/auth';\n\n@Component({\n  selector: 'app-login',\n  styleUrls: ['../../../components/blank-layout-card/blank-layout-card.component.scss'],\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent extends BlankLayoutCardComponent implements OnInit {\n  public loginForm: FormGroup;\n  public email;\n  public password;\n  public emailPattern = '^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$';\n  public error: string;\n\n  constructor(public authService: AuthService,\n              public fb: FormBuilder,\n              public router: Router) {\n    super();\n\n    this.loginForm = this.fb.group({\n      password: new FormControl('', Validators.required),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.pattern(this.emailPattern),\n        Validators.maxLength(20),\n      ]),\n    });\n    this.email = this.loginForm.get('email');\n    this.password = this.loginForm.get('password');\n  }\n\n  public ngOnInit() {\n    this.authService.logout();\n    this.loginForm.valueChanges.subscribe(() => {\n      this.error = null;\n    });\n  }\n\n  public login() {\n    this.error = null;\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.getRawValue())\n        .subscribe(res => this.router.navigate(['/app/dashboard']),\n                   error => this.error = error.message);\n    }\n  }\n\n  public onInputChange(event) {\n    event.target.required = true;\n  }\n}\n","<div class=\"mdl-card mdl-card__blank-layout-card mdl-shadow--2dp\">\n  <div class=\"mdl-card__supporting-text color--dark-gray\">\n    <div class=\"mdl-grid\">\n      <div class=\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\">\n        <span class=\"mdl-card__title-text text-color--smooth-gray\">DARKBOARD</span>\n      </div>\n      <div class=\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\">\n        <span class=\"blank-layout-card-name text-color--white\">Sign in</span>\n        <span class=\"blank-layout-card-secondary-text text-color--smoke\">Enter fields to sign in to DARKBOARD</span>\n      </div>\n      <form class=\"login-form\" [formGroup]=\"loginForm\" (submit)=\"login()\" autocomplete=\"off\" novalidate>\n        <div class=\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\">\n          <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label full-size\"\n               [class.is-invalid]=\"email.invalid && (email.dirty || email.touched)\"\n               [class.is-valid]=\"email.valid && (email.dirty || email.touched)\">\n            <input formControlName=\"email\"\n                   pattern=\"{{emailPattern}}\"\n                   (change)=\"onInputChange($event)\"\n                   class=\"mdl-textfield__input\" type=\"text\" id=\"email\">\n            <label class=\"mdl-textfield__label\" for=\"email\">Email</label>\n\n            <div *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n              <span *ngIf=\"email.errors.required\" class=\"mdl-textfield__error\">\n                Email is required. <span class=\"color-text--orange\"> Please, write any valid email.</span>\n              </span>\n              <span *ngIf=\"email.errors.pattern\" class=\"mdl-textfield__error\">\n                Email is invalid.\n              </span>\n            </div>\n          </div>\n\n          <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label full-size\"\n               [class.is-invalid]=\"password.invalid && (password.dirty || password.touched)\"\n               [class.is-valid]=\"password.valid && (password.dirty || password.touched)\"\n               id=\"forPass\">\n            <input formControlName=\"password\"\n                   (change)=\"onInputChange($event)\"\n                   class=\"mdl-textfield__input\" type=\"password\" id=\"password\">\n            <label class=\"mdl-textfield__label\" for=\"password\">Password</label>\n            <div *ngIf=\"password.invalid && (password.dirty || password.touched)\">\n              <span *ngIf=\"password.errors.required\" class=\"mdl-textfield__error\">\n                Password is required. <span class=\"color-text--orange\"> Please, write any password.</span>\n              </span>\n            </div>\n          </div>\n\n          <div class=\"full-size color-text--red\" *ngIf=\"error\"> {{ error }}</div>\n\n          <a routerLink=\"/pages/forgot-password\" class=\"blank-layout-card-link\">Forgot password?</a>\n        </div>\n        <div class=\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone submit-cell\">\n          <a routerLink=\"/pages/sign-up\" class=\"blank-layout-card-link\">Don't have account?</a>\n          <div class=\"mdl-layout-spacer\"></div>\n          <button class=\"mdl-button mdl-js-button mdl-button--raised color--light-blue\"\n                  type=\"submit\" [disabled]=\"loginForm.invalid\">\n            SIGN IN\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LayoutsModule } from 'app/layouts';\nimport { BlankLayoutComponent } from 'app/layouts/blank-layout';\nimport { ErrorComponent } from './error';\nimport { ForgotPasswordComponent } from './forgot-password';\nimport { LoginComponent } from './login';\nimport { SignUpComponent } from './sign-up';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: '',\n        component: BlankLayoutComponent,\n        children: [\n          { path: '404', component: ErrorComponent, pathMatch: 'full' },\n          { path: 'login', component: LoginComponent, pathMatch: 'full' },\n          { path: 'sign-up', component: SignUpComponent, pathMatch: 'full' },\n          { path: 'forgot-password', component: ForgotPasswordComponent, pathMatch: 'full' },\n          { path: '**', redirectTo: '404' },\n        ],\n      },\n    ]),\n    LayoutsModule,\n  ],\n  exports: [RouterModule],\n})\nexport class PagesRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ThemeModule } from 'theme';\n\nimport { TooltipModule } from '../../../theme/directives/tooltip/tooltip.module';\nimport { ErrorComponent } from './error';\nimport { ForgotPasswordComponent } from './forgot-password';\nimport { LoginComponent } from './login';\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { SignUpComponent } from './sign-up';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ThemeModule,\n    PagesRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TooltipModule,\n  ],\n  declarations: [\n    ErrorComponent,\n    LoginComponent,\n    SignUpComponent,\n    ForgotPasswordComponent,\n  ],\n})\nexport class PagesModule { }\n","export { SignUpComponent } from './sign-up.component';\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '@services/*';\n\nimport { BlankLayoutCardComponent } from 'app/components/blank-layout-card';\n\n@Component({\n  selector: 'app-sign-up',\n  styleUrls: ['../../../components/blank-layout-card/blank-layout-card.component.scss'],\n  templateUrl: './sign-up.component.html',\n})\nexport class SignUpComponent extends BlankLayoutCardComponent implements OnInit {\n\n  public signupForm: FormGroup;\n  public email;\n  public password;\n  public username;\n  public emailPattern = '^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$';\n  public error: string;\n\n  constructor(public authService: AuthService,\n              public fb: FormBuilder,\n              public router: Router) {\n    super();\n\n    this.signupForm = this.fb.group({\n      password: new FormControl('', Validators.required),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.pattern(this.emailPattern),\n        Validators.maxLength(20),\n      ]),\n      username: new FormControl('', [Validators.required, Validators.maxLength(10)]),\n    });\n    this.email = this.signupForm.get('email');\n    this.password = this.signupForm.get('password');\n    this.username = this.signupForm.get('username');\n  }\n\n  public ngOnInit() {\n    this.authService.logout();\n    this.signupForm.valueChanges.subscribe(() => {\n      this.error = null;\n    });\n  }\n\n  public login() {\n    this.error = null;\n    if (this.signupForm.valid) {\n      this.authService.signup(this.signupForm.getRawValue())\n        .subscribe(res => this.router.navigate(['/app/dashboard']),\n                   error => this.error = error.message);\n    }\n  }\n\n  public onInputChange(event) {\n    event.target.required = true;\n  }\n}\n","<div class=\"mdl-card mdl-card__blank-layout-card mdl-shadow--2dp\">\n  <div class=\"mdl-card__supporting-text color--dark-gray\">\n    <div class=\"mdl-grid\">\n      <div class=\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\">\n        <span class=\"mdl-card__title-text text-color--smooth-gray\">DARKBOARD</span>\n      </div>\n      <div class=\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\">\n        <span class=\"blank-layout-card-name text-color--white\">Sign up</span>\n      </div>\n      <form class=\"login-form\" [formGroup]=\"signupForm\" (submit)=\"login()\" novalidate autocomplete=\"off\">\n        <div class=\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\">\n          <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label full-size\"\n               [class.is-invalid]=\"username.invalid && (username.dirty || username.touched)\"\n               [class.is-valid]=\"username.valid && (username.dirty || username.touched)\">\n            <input formControlName=\"username\"\n                   (change)=\"onInputChange($event)\"\n                   class=\"mdl-textfield__input\" type=\"text\" id=\"username\">\n            <label class=\"mdl-textfield__label\" for=\"username\">Name</label>\n\n            <div *ngIf=\"username.invalid && (username.dirty || username.touched)\">\n              <span *ngIf=\"username.errors.required\" class=\"mdl-textfield__error\">\n                Name is required. <span class=\"color-text--orange\"> Please, write any name.</span>\n              </span>\n            </div>\n          </div>\n          <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label full-size\"\n               [class.is-invalid]=\"password.invalid && (password.dirty || password.touched)\"\n               [class.is-valid]=\"password.valid && (password.dirty || password.touched)\" id=\"forRass\">\n            <input formControlName=\"password\"\n                   (change)=\"onInputChange($event)\"\n                   class=\"mdl-textfield__input\" type=\"password\" id=\"password\">\n            <label class=\"mdl-textfield__label\" for=\"password\">Password</label>\n            <div *ngIf=\"password.invalid && (password.dirty || password.touched)\">\n              <span *ngIf=\"password.errors.required\" class=\"mdl-textfield__error\">\n                Password is required. <span class=\"color-text--orange\"> Please, write any password.</span>\n              </span>\n            </div>\n          </div>\n          <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label full-size\"\n               [class.is-invalid]=\"email.invalid && (email.dirty || email.touched)\"\n               [class.is-valid]=\"email.valid && (email.dirty || email.touched)\">\n            <input formControlName=\"email\"\n                   pattern=\"{{emailPattern}}\"\n                   (change)=\"onInputChange($event)\"\n                   class=\"mdl-textfield__input\" type=\"text\" id=\"email\">\n            <label class=\"mdl-textfield__label\" for=\"email\">Email</label>\n\n            <div *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n              <span *ngIf=\"email.errors.required\" class=\"mdl-textfield__error\">\n                Email is required. <span class=\"color-text--orange\"> Please, write any valid email.</span>\n              </span>\n              <span *ngIf=\"email.errors.pattern\" class=\"mdl-textfield__error\">\n                Email is invalid.\n              </span>\n            </div>\n          </div>\n\n          <label baseCheckbox color=\"light-blue\" class=\"checkbox--inline\" inline></label>\n          <span class=\"blank-layout-card-link\">I agree all statements in <a href=\"#\"\n                                                                            class=\"underlined\">terms of service</a></span>\n        </div>\n        <div class=\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone submit-cell\">\n          <a routerLink=\"/pages/login\" class=\"blank-layout-card-link\">I have already signed up</a>\n          <div class=\"mdl-layout-spacer\"></div>\n          <button class=\"mdl-button mdl-js-button mdl-button--raised color--light-blue\"\n                  type=\"submit\" [disabled]=\"signupForm.invalid\">\n            SIGN UP\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}